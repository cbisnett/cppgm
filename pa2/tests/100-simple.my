simple { OP_LBRACE
simple } OP_RBRACE
simple [ OP_LSQUARE
simple ] OP_RSQUARE
simple ( OP_LPAREN
simple ) OP_RPAREN
simple <: OP_LSQUARE
simple :> OP_RSQUARE
simple <% OP_LBRACE
simple %> OP_RBRACE
simple ; OP_SEMICOLON
simple : OP_COLON
simple ... OP_DOTS
simple ? OP_QMARK
simple :: OP_COLON2
simple . OP_DOT
simple .* OP_DOTSTAR
simple + OP_PLUS
simple - OP_MINUS
simple * OP_STAR
simple / OP_DIV
simple % OP_MOD
simple ^ OP_XOR
simple & OP_AMP
simple | OP_BOR
simple ~ OP_COMPL
simple ! OP_LNOT
simple = OP_ASS
simple < OP_LT
simple > OP_GT
simple += OP_PLUSASS
simple -= OP_MINUSASS
simple *= OP_STARASS
simple /= OP_DIVASS
simple %= OP_MODASS
simple ^= OP_XORASS
simple &= OP_BANDASS
simple |= OP_BORASS
simple << OP_LSHIFT
simple >> OP_RSHIFT
simple >>= OP_RSHIFTASS
simple <<= OP_LSHIFTASS
simple == OP_EQ
simple != OP_NE
simple <= OP_LE
simple >= OP_GE
simple && OP_LAND
simple || OP_LOR
simple ++ OP_INC
simple -- OP_DEC
simple , OP_COMMA
simple ->* OP_ARROWSTAR
simple -> OP_ARROW
simple and OP_LAND
simple and_eq OP_BANDASS
simple bitand OP_AMP
simple bitor OP_BOR
simple compl OP_COMPL
simple not OP_LNOT
simple not_eq OP_NE
simple or OP_LOR
simple or_eq OP_BORASS
simple xor OP_XOR
simple xor_eq OP_XORASS
simple new KW_NEW
simple delete KW_DELETE
simple alignas KW_ALIGNAS
simple alignof KW_ALIGNOF
simple asm KW_ASM
simple auto KW_AUTO
simple bool KW_BOOL
simple break KW_BREAK
simple case KW_CASE
simple catch KW_CATCH
simple char KW_CHAR
simple char16_t KW_CHAR16_T
simple char32_t KW_CHAR32_T
simple class KW_CLASS
simple const KW_CONST
simple constexpr KW_CONSTEXPR
simple const_cast KW_CONST_CAST
simple continue KW_CONTINUE
simple decltype KW_DECLTYPE
simple default KW_DEFAULT
simple delete KW_DELETE
simple do KW_DO
simple double KW_DOUBLE
simple dynamic_cast KW_DYNAMIC_CAST
simple else KW_ELSE
simple enum KW_ENUM
simple explicit KW_EXPLICIT
simple export KW_EXPORT
simple extern KW_EXTERN
simple false KW_FALSE
simple float KW_FLOAT
simple for KW_FOR
simple friend KW_FRIEND
simple goto KW_GOTO
simple if KW_IF
simple inline KW_INLINE
simple int KW_INT
simple long KW_LONG
simple mutable KW_MUTABLE
simple namespace KW_NAMESPACE
simple new KW_NEW
simple noexcept KW_NOEXCEPT
simple nullptr KW_NULLPTR
simple operator KW_OPERATOR
simple private KW_PRIVATE
simple protected KW_PROTECTED
simple public KW_PUBLIC
simple register KW_REGISTER
simple reinterpret_cast KW_REINTERPET_CAST
simple return KW_RETURN
simple short KW_SHORT
simple signed KW_SIGNED
simple sizeof KW_SIZEOF
simple static KW_STATIC
simple static_assert KW_STATIC_ASSERT
simple static_cast KW_STATIC_CAST
simple struct KW_STRUCT
simple switch KW_SWITCH
simple template KW_TEMPLATE
simple this KW_THIS
simple thread_local KW_THREAD_LOCAL
simple throw KW_THROW
simple true KW_TRUE
simple try KW_TRY
simple typedef KW_TYPEDEF
simple typeid KW_TYPEID
simple typename KW_TYPENAME
simple union KW_UNION
simple unsigned KW_UNSIGNED
simple using KW_USING
simple virtual KW_VIRTUAL
simple void KW_VOID
simple volatile KW_VOLATILE
simple wchar_t KW_WCHAR_T
simple while KW_WHILE
identifier abcd
identifier _foo123
invalid #
invalid ##
invalid %:
invalid %:%:
eof
